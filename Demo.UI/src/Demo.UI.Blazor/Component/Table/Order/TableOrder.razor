@using System.ComponentModel;
<Row class="row">
    <Column ColumnSize="ColumnSize.Is4">
        <Text>Order Date</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Sales Person</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Delivery Staff</Text>
        <TextEdit Size="Size.Small" />
    </Column>
</Row>

<Row class="row">
    <Column ColumnSize="ColumnSize.Is4">
        <Text>Delivery Unit</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Pay Method</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">

    </Column>
</Row>

<Row class="row">
    <Column ColumnSize="ColumnSize.Is4">
        <Row>
            <Text>Disc Ajustment(%Money)</Text>
            <Column ColumnSize="ColumnSize.Is6">
                <TextEdit Size="Size.Small" />
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <TextEdit Size="Size.Small" />
            </Column>
        </Row>
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Row>
            <Text>Volumn/Line Discount</Text>
            <Column ColumnSize="ColumnSize.Is6">
                <TextEdit Size="Size.Small" />
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <TextEdit Size="Size.Small" />
            </Column>
        </Row>
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Row>
            <Column ColumnSize="ColumnSize.Is12">
                <Text>Reward Amount</Text>
                <TextEdit Size="Size.Small" />
            </Column>
        </Row>
    </Column>
</Row>

<Row class="row">
    <Column ColumnSize="ColumnSize.Is12">
        <Check TValue="bool" @bind-Checked="@remember">Do Not Caculator Discount</Check>
    </Column>
</Row>

<Row class="row">
    <Column ColumnSize="ColumnSize.Is4">
        <Text>Total Item Amount</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Total Taxt Amount</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Quantity Amount</Text>
        <TextEdit Size="Size.Small" />
    </Column>
</Row>

<Row class="row">
    <Column ColumnSize="ColumnSize.Is4">
        <Text>Total</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">
        <Text>Total Amount</Text>
        <TextEdit Size="Size.Small" />
    </Column>

    <Column ColumnSize="ColumnSize.Is4">

    </Column>
</Row>

<Row Style="margin-top:20px">
    <Table FixedHeader FixedHeaderTableHeight="500px" Style="margin-top:24px">
        <TableHeader ThemeContrast="ThemeContrast.Light">
            <TableRow>
                <TableHeaderCell></TableHeaderCell>
                <TableHeaderCell class="table-title">Product ID</TableHeaderCell>
                <TableHeaderCell class="table-title">Product Name</TableHeaderCell>
                <TableHeaderCell class="table-title">Unit</TableHeaderCell>
                <TableHeaderCell class="table-title">Site Code</TableHeaderCell>
                <TableHeaderCell class="table-title">Quantity</TableHeaderCell>
                <TableHeaderCell class="table-title">Sale Price</TableHeaderCell>
                <TableHeaderCell class="table-title">Extended Cost</TableHeaderCell>
            </TableRow>
        </TableHeader>

        <TableBody>
            @foreach (var item in data)
            {
                <TableRow>
                    <TableRowHeader>@item.Key</TableRowHeader>
                    <TableRowCell>@item.ProductID</TableRowCell>
                    <TableRowCell>@item.ProductName</TableRowCell>
                    <TableRowCell>@item.Unit</TableRowCell>
                    <TableRowCell>@item.SiteCode</TableRowCell>
                    <TableRowCell>@item.Quantity</TableRowCell>
                    <TableRowCell>@item.SalesPrice</TableRowCell>
                    <TableRowCell>@item.ExtendedCost</TableRowCell>
                </TableRow>
            }

        </TableBody>
    </Table>
</Row>
<Row>
    <Pagination>
        <PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
            <PaginationLink>
                <span aria-hidden="true">«</span>
            </PaginationLink>
        </PaginationItem>
        @{
            for (var i = 1; i <= pageItems; i++)
            {
                var pageNumberAsString = i.ToString();
                <PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
                    <PaginationLink Page="@pageNumberAsString" Clicked="SetActive">
                        @pageNumberAsString
                    </PaginationLink>
                </PaginationItem>
            }
        }
        <PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
            <PaginationLink>
                <span aria-hidden="true">»</span>
            </PaginationLink>
        </PaginationItem>
    </Pagination>
</Row>
<style>
    .row {
        margin-top: 10px;
    }
</style>
@code {
    private const string PREVIOUS = "previous";
    private const string NEXT = "next";
    private string currentPage = "1";
    private int pageItems = 5;

    bool remember = true;

    //Table
    Data[] data = new Data[]
     {
    new ()
    {
        Key = "1",
        ProductID = "APSCH-STA",
        ProductName = "Snack Que Nhân Phô Mai 7g",
        Unit = "THUNG",
        SiteCode = "DNDN01P",
        Quantity = 1,
        SalesPrice =16000,
        ExtendedCost = 16000,
    },
    new()
    {
        Key = "2",
        ProductID = "CTHT-SSLA",
        ProductName = "Nước giải khát Mirinda 450ml",
        Unit = "KET",
        SiteCode = "DNDN02P",
        Quantity = 2,
        SalesPrice =8000,
        ExtendedCost = 7750,
    },
    new()
    {
        Key = "3",
        ProductID = "SKHG-BTT",
        ProductName = "Trà xanh 0 độ 500ml",
        Unit = "THUNG",
        SiteCode = "DNDN02P",
        Quantity = 3,
        SalesPrice =9000,
        ExtendedCost = 9000,
    } ,
    new()
    {
        Key = "4",
        ProductID = "APSCH-STA",
        ProductName = "Sữa đậu nành Milksoy 450ml",
        Unit = "THUNG",
        SiteCode = "DNDN01P",
        Quantity = 1,
        SalesPrice =16000,
        ExtendedCost = 16000,
    },
    new()
    {
        Key = "5",
        ProductID = "CLCS-AA1",
        ProductName = "Nước dừa đóng lon Quitar 450ml",
        Unit = "THUNG",
        SiteCode = "DNDN02P",
        Quantity = 4,
        SalesPrice =11000,
        ExtendedCost = 11000,
    },
     };

    public class Data
    {
        [DisplayName("Key")]
        public string Key { get; set; }

        [DisplayName("Product ID")]
        public string ProductID { get; set; }

        [DisplayName("Product Name")]
        public string ProductName { get; set; }

        [DisplayName("Unit")]
        public string Unit { get; set; }

        [DisplayName("Site Code")]
        public string SiteCode { get; set; }

        [DisplayName("Quantity")]
        public int Quantity { get; set; }

        [DisplayName("Order Type")]
        public string OrderType { get; set; }

        [DisplayName("Sales Price")]
        public double SalesPrice { get; set; }

        [DisplayName("Extended Cost")]
        public double ExtendedCost { get; set; }
    }

   
    public int CountData()
    {
        int count = 0;
        for(int i = 0; i<data.Length; i++)
        {
            count++;
        }
        return count;
    }
    private bool IsActive(string page)
        => currentPage == page;

    private bool IsPageNavigationDisabled(string navigation)
    {
        if (navigation.Equals(PREVIOUS))
        {
            return currentPage.Equals("1");
        }
        else if (navigation.Equals(NEXT))
        {
            return currentPage.Equals(pageItems.ToString());
        }
        return false;
    }

    private void Previous()
    {
        var currentPageAsInt = int.Parse(currentPage);
        if (currentPageAsInt > 1)
        {
            currentPage = (currentPageAsInt - 1).ToString();
        }
    }

    private void Next()
    {
        var currentPageAsInt = int.Parse(currentPage);
        if (currentPageAsInt < pageItems)
        {
            currentPage = (currentPageAsInt + 1).ToString();
        }
    }

    private void SetActive(string page)
        => currentPage = page;
}
